name: Build

on:
  push:
  pull_request:

jobs:

  test:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: |
          chmod +x ./gradlew
          ./gradlew test


  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - uses: actions/upload-artifact@v2
        with:
          name: built-app
          path: ${{ env.SIGNED_RELEASE_FILE }}


  draft:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:

      - uses: actions/checkout@v2

      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      - run: |
          DIR_TIMESTAMP=$(git log -1 --pretty="format:%ct" ./changelogs/)
          for d in ./changelogs/*/; do
            if [ $(git log -1 --pretty="format:%ct" "$d") = $DIR_TIMESTAMP ]; then
              echo "::set-env name=CHANGELOG_DIR::$d"
            fi
          done

      - uses: actions/create-release@v1
        id: draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: draft
          release_name: draft
          body_path: ${{ env.CHANGELOG_DIR }}whatsnew-ja-JP
          draft: true

      - uses: actions/download-artifact@v1
        with:
          name: built-app

      - run: |
          cd ./built-app
          echo "::set-env name=ARTIFACT_FILE::$(find . -type f -name "*.apk" | head -1 | gawk -F/ '{print $NF}')"

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft.outputs.upload_url }}
          asset_path: ./built-app/${{ env.ARTIFACT_FILE }}
          asset_name: ${{ env.ARTIFACT_FILE }}
          asset_content_type: application/vnd.android.package-archive
